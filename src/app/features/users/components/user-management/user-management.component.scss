.action-buttons {
  display: flex;
  justify-content: center;
  gap: var(--spacing-unit);
}

.table-scroll-wrapper {
  overflow-x: auto;
  width: 100%;
}

// This is the new wrapper for the table and pagination
.table-group {
  // The group gets the border and rounded corners
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  // overflow: hidden; // This is important to enforce the rounded corners on children
  // Use flexbox to ensure the pagination component is not part of the scrollable area
  display: flex;
  flex-direction: column;

  // The wrapper takes up the available space
  .table-scroll-wrapper {
    flex-grow: 1;
  }
}

// Use ::ng-deep to modify the styles of the child components
:host ::ng-deep {
  // Target the table's inner container
  .table-group app-table .table-container {
    // Remove the default border and radius so it fits flush in our group
    border: none;
    border-top-left-radius:  var(--border-radius);
    border-top-right-radius: var(--border-radius);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  // Target the pagination's inner container
  .table-group app-pagination .pagination-container {
    // The pagination already has a top border, which we want to keep,
    // but we remove its background so it feels connected.
    background-color: transparent;
  }
}

// Styles for the header actions container
.header-actions {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: calc(var(--spacing-unit) * 2);
   @media (max-width: 768px) {
    flex-direction: column;
    align-items: flex-start; // Align items to the start
  }
}

// Target the search input component
.search-input {
  width: 250px;
}
