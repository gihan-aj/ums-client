:host {
  display: block;
  width: 100%;
}

.input-wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.input-label {
  font-size: var(--font-size-base);
  font-weight: 500;
  margin-bottom: var(--spacing-unit);
  color: var(--text-color);
}

.input-container {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
}

.input-element {
  width: 100%;
  padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 1);
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  color: var(--text-color);
  background-color: var(--surface-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  transition: border-color var(--transition-speed) ease-in-out,
              box-shadow var(--transition-speed) ease-in-out;

  &.has-loader {
    // Add padding to prevent text from overlapping the spinner
    padding-right: calc(var(--spacing-unit) * 5);
  }

  &::placeholder {
    color: var(--secondary-color);
  }

  &:focus {
    outline: none;
    border-color: var(--border-color-focus);
    box-shadow: 0 0 0 3px var(--primary-color-focus);
  }
  
  &.is-readonly {
    background-color: var(--background-color);
    cursor: default;
    color: var(--secondary-color);

    &:focus {
      // Prevent focus styles on readonly inputs
      border-color: var(--border-color);
      box-shadow: none;
    }
  }
}

// Style the input when it's invalid
:host(.is-invalid) .input-element {
  border-color: var(--error-color);

  &:focus {
     box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.3);
  }
}

// This container reserves space for the error message to prevent layout shifts.
.error-container {
  min-height: 18px; // Adjust this value as needed
  display: flex;
  align-items: center;
  margin-top: calc(var(--spacing-unit) * 0.5);
}

.error-message {
  font-size: calc(var(--font-size-base) * 0.85);
  color: var(--error-color);
  font-weight: 500;
}

// --- Loading Spinner Styles ---
.loader-spinner {
  position: absolute;
  right: calc(var(--spacing-unit) * 1.5);
  width: 18px;
  height: 18px;
  border: 2px solid var(--secondary-color);
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}